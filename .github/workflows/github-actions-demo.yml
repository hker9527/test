name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      vpngate-profiles: ${{ steps.fetch-profiles.outputs.vpngate-profiles }}
    steps:
      - id: fetch-profiles
        name: Fetch profiles
        run: |
          curl -s https://www.vpngate.net/api/iphone/ | \
          tail -n +3 | \
          while IFS="," read -r hostName ip score ping speed countryLong countryShort numVpnSessions uptime totalUsers totalTraffic logType operator message openVPN_ConfigData_Base64; do
            if [[ "$ip" != "" ]]; then
              echo "$openVPN_ConfigData_Base64" | tr -d "\r\n" | base64 -d > "$ip.ovpn"
            fi
          done
          echo "Fetched $(ls *.ovpn | wc -l) profiles"
          echo "vpngate-profiles=$(ls *.ovpn | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "Saved profile names to $GITHUB_OUTPUT"
      - id: upload-profiles
        name: Upload profiles
        uses: actions/upload-artifact@v3
        with:
          name: vpngate-profiles
          path: "*.ovpn"
  dispatch:
    needs: prepare
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        profile: ${{ fromJson(needs.prepare.outputs.vpngate-profiles) }}
    steps:
      - name: Testing ${{ matrix.profile }}
        run: echo
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vpngate-profiles
      - name: Check if profile exists
        run: |
          if [[ ! -f ${{ matrix.profile }} ]]; then
            echo "Could not find ${{ matrix.profile }}"
            exit 1
          fi
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends openvpn
      - name: Wait for the connection to be established
        timeout-minutes: 1
        run: |
          sudo openvpn --config ${{ matrix.profile }} --log "vpn.log" --daemon
          until ping -c 1 -W 1 1.1.1.1 > /dev/null 2>&1; do
            grep "Initialization Sequence Completed" vpn.log && exit 0
            grep "AUTH_FAILED" vpn.log && exit 1
            grep "TLS_ERROR" vpn.log && exit 1
            grep "VERIFY_ERROR" vpn.log && exit 1

            echo "---------------------------------"
            sleep 1
          done
      - name: curl test
        run: curl -s https://ipinfo.io/json
  cleanup:
    needs: dispatch
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: vpngate-profiles
